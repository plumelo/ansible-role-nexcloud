---

- name: check nextcloud status
  become: true
  become_user: "{{ nextcloud_websrv_user }}"
  args:
    chdir: "{{ nextcloud_path }}"
  shell: php occ status
  register: nextcloud_occ_status
  changed_when: no

- name: install nextcloud
  become: true
  become_user: "{{ nextcloud_websrv_user }}"
  args:
    chdir: "{{ nextcloud_path }}"
  shell: php occ maintenance:install --database "{{ nextcloud_database }}" --database-name "{{ nextcloud_database_name }}"  --database-user "{{ nextcloud_database_user }}" --database-pass "{{ nextcloud_database_pass }}" --admin-user "{{ nextcloud_admin_user }}" --admin-pass "{{ nextcloud_admin_pass }}"
  when: '"installed: true" not in nextcloud_occ_status.stdout'

- name: Get trusted domains
  become: true
  become_user: "{{ nextcloud_websrv_user }}"
  args:
    chdir: "{{ nextcloud_path }}"
  shell: php occ config:system:get trusted_domains
  register: nextcloud_occ_domains

- name: add domain as trusted
  become: true
  become_user: "{{ nextcloud_websrv_user }}"
  args:
    chdir: "{{ nextcloud_path }}"
  shell: php occ config:system:set trusted_domains 1 --value={{ item }}
  when: '"{{ item }}" not in nextcloud_occ_domains.stdout'
  with_items: "{{ nextcloud_hosts }}"

- name: Clone apps
  git:
    accept_hostkey: yes
    repo: "{{ item.src }}"
    dest: "/srv/nextcloud/apps/{{ item.name }}"
  with_items: "{{ nextcloud_apps }}"

- name: Enable apps
  become: true
  become_user: "{{ nextcloud_websrv_user }}"
  args:
    chdir: "{{ nextcloud_path }}"
  shell: php occ app:enable {{ item.name }}
  with_items: "{{ nextcloud_apps }}"
